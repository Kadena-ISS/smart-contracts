(load "../utils/init-erc20.repl")

;; Let's set up all the necessary data for the contracts

(begin-tx)
(namespace "n_9b079bebc8a0d688e4b2f4279a114148d6760edf")

;; Set up the GasOracle
(env-sigs [ { "key": bridge-keys.bridge, "caps": [ (gas-oracle.ONLY_ORACLE_ADMIN) ] } ])
(gas-oracle.set-remote-gas-data-configs 
    [
        {
            "domain": data.eth-domain,
            "token-exchange-rate": 1.0,
            "gas-price": 0.001
        }
    ]
)
(gas-oracle.set-remote-gas-data-configs 
    [
        {
            "domain": data.pol-domain,
            "token-exchange-rate": 2.0,
            "gas-price": 0.001
        }
    ]
)

(env-sigs [ { "key": bridge-keys.bridge, "caps": [ (validator-announce.ONLY_ADMIN) ] } ])
(validator-announce.announce vdata.validator vdata.sloc vdata.va-sig)

;; Set up the IGP
(env-sigs [ { "key": bridge-keys.bridge, "caps": [ (igp.ONLY_ADMIN) ] } ])
(igp.set-remote-gas-amount {"domain": data.eth-domain, "gas-amount": 1000.0})
(igp.set-remote-gas-amount {"domain": data.pol-domain, "gas-amount": 1000.0})

(commit-tx)

(begin-tx)
(namespace "n_9b079bebc8a0d688e4b2f4279a114148d6760edf")

;; Initialize the HypERC20
;; The remote router is just some dummy address
(env-sigs [ { "key": bridge-keys.bridge, "caps": [ (hyp-erc20.ONLY_ADMIN) ] } ])
(hyp-erc20.enroll-remote-router data.eth-domain data.eth-router)

;; Initialize the HypERC20 within the Mailbox
(env-sigs [ { "key": bridge-keys.bridge, "caps": [ (mailbox.ONLY_ADMIN) ] } ])
(mailbox.store-router hyp-erc20)

;; Set up the HypERC20
;; The remote router is just some dummy address
(env-sigs [ { "key": bridge-keys.bridge, "caps": [ (hyp-erc20-collateral.ONLY_ADMIN) ] } ])
(hyp-erc20-collateral.enroll-remote-router data.eth-domain data.eth-router)

;; Set up the HypERC20 within the Mailbox
(env-sigs [ { "key": bridge-keys.bridge, "caps": [ (mailbox.ONLY_ADMIN) ] } ])
(mailbox.store-router hyp-erc20-collateral)
(commit-tx)




